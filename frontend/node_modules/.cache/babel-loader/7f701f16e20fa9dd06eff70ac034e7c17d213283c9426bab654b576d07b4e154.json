{"ast":null,"code":"var _jsxFileName = \"/home/ujjwal-gupta/Desktop/IoT-Main/frontend/src/components/Dashboard.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport PatientDetail from './PatientDetail';\nimport AddPatientPage from './AddPatientPage';\nimport './Dashboard.css';\n\n// For demo purposes: Get a simulated alert level based on patient unique_id\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getSimulatedAlertLevel = patientId => {\n  // Convert ID to string then to number for consistency\n  const idNum = parseInt(patientId.toString());\n\n  // Use modulo to get values 0, 1, 2\n  // IDs ending with 0,3,6,9 will show Normal (0)\n  // IDs ending with 1,4,7 will show Moderate Risk (1)\n  // IDs ending with 2,5,8 will show High Risk (2)\n  const lastDigit = idNum % 10;\n  if (lastDigit === 1 || lastDigit === 4 || lastDigit === 7) {\n    return 1; // Moderate Risk\n  } else if (lastDigit === 2 || lastDigit === 5 || lastDigit === 8) {\n    return 2; // High Risk\n  } else {\n    return 0; // Normal\n  }\n};\n\n// Get alert status text from alert level\nconst getAlertStatusText = alertLevel => {\n  switch (alertLevel) {\n    case 1:\n      return \"Moderate Risk\";\n    case 2:\n      return \"High Risk\";\n    default:\n      return \"Normal\";\n  }\n};\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('theme') === 'dark');\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [patients, setPatients] = useState([]);\n  const [doctor, setDoctor] = useState(null);\n  const [contextMenu, setContextMenu] = useState({\n    show: false,\n    x: 0,\n    y: 0,\n    patientId: null\n  });\n  const hospitalName = \"MediCare General Hospital\";\n\n  // Add this function to handle patient deletion\n  const handleDeletePatient = async patientId => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this patient? This action cannot be undone.\");\n    if (!isConfirmed) return;\n    try {\n      const response = await fetch(`http://localhost:8000/${patientId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to delete patient');\n      }\n\n      // Update the patients list after successful deletion\n      setPatients(patients.filter(patient => patient.unique_id !== patientId));\n\n      // Show success message\n      alert('Patient deleted successfully');\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      alert(error.message || 'Failed to delete patient. Please try again.');\n    } finally {\n      // Hide the context menu\n      setContextMenu({\n        show: false,\n        x: 0,\n        y: 0,\n        patientId: null\n      });\n    }\n  };\n\n  // Add click handler to hide context menu when clicking outside\n  useEffect(() => {\n    const handleClick = () => setContextMenu({\n      show: false,\n      x: 0,\n      y: 0,\n      patientId: null\n    });\n    document.addEventListener('click', handleClick);\n    return () => document.removeEventListener('click', handleClick);\n  }, []);\n\n  // Dark mode effect\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    localStorage.setItem('theme', darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n\n  // Clock effect - separated from other state updates\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Data fetching effect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const patientsData = await response.json();\n\n        // Add simulated alert levels to patients for demo purposes\n        const patientsWithAlerts = patientsData.map(patient => ({\n          ...patient,\n          alertLevel: getSimulatedAlertLevel(patient.unique_id),\n          alertStatus: getAlertStatusText(getSimulatedAlertLevel(patient.unique_id))\n        }));\n        console.log('Fetched patients:', patientsWithAlerts); // Debug log\n        setPatients(patientsWithAlerts);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Memoize functions and values that don't need to change on every render\n  const getStatusColor = useMemo(() => (status, alertLevel) => {\n    // If alert level is provided, it takes precedence\n    if (alertLevel !== undefined) {\n      switch (alertLevel) {\n        case 2:\n          return 'status-critical';\n        case 1:\n          return 'status-attention';\n        case 0:\n          return 'status-normal';\n        default:\n          return '';\n      }\n    }\n\n    // Fall back to regular status if alert level not available\n    switch (status) {\n      case 'critical':\n        return 'status-critical';\n      case 'needs attention':\n        return 'status-attention';\n      case 'normal':\n        return 'status-normal';\n      default:\n        return '';\n    }\n  }, []);\n  const formatDate = useMemo(() => date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }, []);\n  const HomePage = () => {\n    _s();\n    const navigate = useNavigate();\n    const handleContextMenu = (e, patientId) => {\n      e.preventDefault();\n      setContextMenu({\n        show: true,\n        x: e.pageX,\n        y: e.pageY,\n        patientId\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Patient Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-patient-btn\",\n            onClick: () => navigate('/add-patient'),\n            children: \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patients-grid\",\n        children: patients.length > 0 ? patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n          onContextMenu: e => handleContextMenu(e, patient.unique_id),\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/patient/${patient.unique_id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `patient-card ${getStatusColor(patient.status, patient.alertLevel)}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: patient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"ID: \", patient.unique_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `status ${patient.alertLevel === 2 ? 'critical' : patient.alertLevel === 1 ? 'warning' : 'normal'}`,\n                children: [\"Status: \", patient.alertStatus || 'Normal']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), patient.alertLevel > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `alert-badge ${patient.alertLevel === 2 ? 'high-risk' : 'moderate-risk'}`,\n                children: patient.alertLevel === 1 ? 'MODERATE RISK' : 'HIGH RISK'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, patient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No patients found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), contextMenu.show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu\",\n        style: {\n          position: 'fixed',\n          top: contextMenu.y,\n          left: contextMenu.x\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePatient(contextMenu.patientId),\n          className: \"context-menu-item delete\",\n          children: \"Delete Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n  _s(HomePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hospitalName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), doctor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-profile\",\n        children: [doctor.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: doctor.avatar,\n          alt: \"Doctor\",\n          className: \"doctor-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: doctor.name || \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: doctor.email_id || 'Email not specified'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", doctor.doc_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: currentTime.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: formatDate(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          children: darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-patient\",\n          element: /*#__PURE__*/_jsxDEV(AddPatientPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient/:id\",\n          element: /*#__PURE__*/_jsxDEV(PatientDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"cdBC2e4u9tpc9MBZtGQzf7v9WzM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","Routes","Route","useNavigate","PatientDetail","AddPatientPage","jsxDEV","_jsxDEV","Fragment","_Fragment","getSimulatedAlertLevel","patientId","idNum","parseInt","toString","lastDigit","getAlertStatusText","alertLevel","Dashboard","_s2","_s","$RefreshSig$","darkMode","setDarkMode","localStorage","getItem","currentTime","setCurrentTime","Date","patients","setPatients","doctor","setDoctor","contextMenu","setContextMenu","show","x","y","hospitalName","handleDeletePatient","isConfirmed","window","confirm","response","fetch","method","ok","errorData","json","Error","detail","filter","patient","unique_id","alert","error","console","message","handleClick","document","addEventListener","removeEventListener","body","classList","toggle","setItem","timer","setInterval","clearInterval","fetchData","patientsData","patientsWithAlerts","map","alertStatus","log","getStatusColor","status","undefined","formatDate","date","toLocaleDateString","weekday","year","month","day","HomePage","navigate","handleContextMenu","e","preventDefault","pageX","pageY","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onContextMenu","to","name","id","style","position","top","left","avatar","src","alt","email_id","doc_id","toLocaleTimeString","path","element","_c","$RefreshReg$"],"sources":["/home/ujjwal-gupta/Desktop/IoT-Main/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport PatientDetail from './PatientDetail';\nimport AddPatientPage from './AddPatientPage';\nimport './Dashboard.css';\n\n// For demo purposes: Get a simulated alert level based on patient unique_id\nconst getSimulatedAlertLevel = (patientId) => {\n  // Convert ID to string then to number for consistency\n  const idNum = parseInt(patientId.toString());\n  \n  // Use modulo to get values 0, 1, 2\n  // IDs ending with 0,3,6,9 will show Normal (0)\n  // IDs ending with 1,4,7 will show Moderate Risk (1)\n  // IDs ending with 2,5,8 will show High Risk (2)\n  const lastDigit = idNum % 10;\n  \n  if (lastDigit === 1 || lastDigit === 4 || lastDigit === 7) {\n    return 1; // Moderate Risk\n  } else if (lastDigit === 2 || lastDigit === 5 || lastDigit === 8) {\n    return 2; // High Risk\n  } else {\n    return 0; // Normal\n  }\n};\n\n// Get alert status text from alert level\nconst getAlertStatusText = (alertLevel) => {\n  switch(alertLevel) {\n    case 1: return \"Moderate Risk\";\n    case 2: return \"High Risk\";\n    default: return \"Normal\";\n  }\n};\n\nconst Dashboard = () => {\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('theme') === 'dark');\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [patients, setPatients] = useState([]);\n  const [doctor, setDoctor] = useState(null);\n  const [contextMenu, setContextMenu] = useState({\n    show: false,\n    x: 0,\n    y: 0,\n    patientId: null\n  });\n  const hospitalName = \"MediCare General Hospital\";\n\n  // Add this function to handle patient deletion\n  const handleDeletePatient = async (patientId) => {\n    const isConfirmed = window.confirm(\n      \"Are you sure you want to delete this patient? This action cannot be undone.\"\n    );\n\n    if (!isConfirmed) return;\n\n    try {\n      const response = await fetch(`http://localhost:8000/${patientId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to delete patient');\n      }\n\n      // Update the patients list after successful deletion\n      setPatients(patients.filter(patient => patient.unique_id !== patientId));\n      \n      // Show success message\n      alert('Patient deleted successfully');\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      alert(error.message || 'Failed to delete patient. Please try again.');\n    } finally {\n      // Hide the context menu\n      setContextMenu({ show: false, x: 0, y: 0, patientId: null });\n    }\n  };\n\n  // Add click handler to hide context menu when clicking outside\n  useEffect(() => {\n    const handleClick = () => setContextMenu({ show: false, x: 0, y: 0, patientId: null });\n    document.addEventListener('click', handleClick);\n    return () => document.removeEventListener('click', handleClick);\n  }, []);\n\n  // Dark mode effect\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    localStorage.setItem('theme', darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n\n  // Clock effect - separated from other state updates\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Data fetching effect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n\n        const patientsData = await response.json();\n        \n        // Add simulated alert levels to patients for demo purposes\n        const patientsWithAlerts = patientsData.map(patient => ({\n          ...patient,\n          alertLevel: getSimulatedAlertLevel(patient.unique_id),\n          alertStatus: getAlertStatusText(getSimulatedAlertLevel(patient.unique_id))\n        }));\n        \n        console.log('Fetched patients:', patientsWithAlerts); // Debug log\n        setPatients(patientsWithAlerts);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  // Memoize functions and values that don't need to change on every render\n  const getStatusColor = useMemo(() => (status, alertLevel) => {\n    // If alert level is provided, it takes precedence\n    if (alertLevel !== undefined) {\n      switch(alertLevel) {\n        case 2: return 'status-critical';\n        case 1: return 'status-attention';\n        case 0: return 'status-normal';\n        default: return '';\n      }\n    }\n    \n    // Fall back to regular status if alert level not available\n    switch(status) {\n      case 'critical': return 'status-critical';\n      case 'needs attention': return 'status-attention';\n      case 'normal': return 'status-normal';\n      default: return '';\n    }\n  }, []);\n\n  const formatDate = useMemo(() => (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long', \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  }, []);\n\n  const HomePage = () => {\n    const navigate = useNavigate();\n    \n    const handleContextMenu = (e, patientId) => {\n      e.preventDefault();\n      setContextMenu({\n        show: true,\n        x: e.pageX,\n        y: e.pageY,\n        patientId\n      });\n    };\n\n    return (\n      <>\n        <div className=\"dashboard-header\">\n          <div className=\"header-content\">\n            <h2>Patient Dashboard</h2>\n            <button \n              className=\"add-patient-btn\"\n              onClick={() => navigate('/add-patient')}\n            >\n              Add New Patient\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"patients-grid\">\n          {patients.length > 0 ? (\n            patients.map(patient => (\n              <div \n                key={patient.id}\n                onContextMenu={(e) => handleContextMenu(e, patient.unique_id)}\n              >\n                <Link to={`/patient/${patient.unique_id}`}>\n                  <div className={`patient-card ${getStatusColor(patient.status, patient.alertLevel)}`}>\n                    <h3>{patient.name}</h3>\n                    <p>ID: {patient.unique_id}</p>\n                    <p className={`status ${patient.alertLevel === 2 ? 'critical' : patient.alertLevel === 1 ? 'warning' : 'normal'}`}>\n                      Status: {patient.alertStatus || 'Normal'}\n                    </p>\n                    {patient.alertLevel > 0 && (\n                      <div className={`alert-badge ${patient.alertLevel === 2 ? 'high-risk' : 'moderate-risk'}`}>\n                        {patient.alertLevel === 1 ? 'MODERATE RISK' : 'HIGH RISK'}\n                      </div>\n                    )}\n                  </div>\n                </Link>\n              </div>\n            ))\n          ) : (\n            <p>No patients found</p>\n          )}\n        </div>\n\n        {/* Context Menu */}\n        {contextMenu.show && (\n          <div \n            className=\"context-menu\"\n            style={{ \n              position: 'fixed',\n              top: contextMenu.y,\n              left: contextMenu.x,\n            }}\n          >\n            <button \n              onClick={() => handleDeletePatient(contextMenu.patientId)}\n              className=\"context-menu-item delete\"\n            >\n              Delete Patient\n            </button>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <aside className=\"sidebar\">\n        <div className=\"hospital-info\">\n          <h1>{hospitalName}</h1>\n        </div>\n        \n        {doctor && (\n          <div className=\"doctor-profile\">\n            {doctor.avatar && <img src={doctor.avatar} alt=\"Doctor\" className=\"doctor-avatar\" />}\n            <div className=\"doctor-details\">\n              <h2>{doctor.name || \"Doctor Name\"}</h2>\n              <p>{doctor.email_id || 'Email not specified'}</p>\n              <p>ID: {doctor.doc_id}</p>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"clock-widget\">\n          <div className=\"time\">{currentTime.toLocaleTimeString()}</div>\n          <div className=\"date\">{formatDate(currentTime)}</div>\n        </div>\n        \n        <div className=\"theme-toggle\">\n          <button onClick={() => setDarkMode(!darkMode)}>\n            {darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          </button>\n        </div>\n      </aside>\n      \n      <main className=\"main-content\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/add-patient\" element={<AddPatientPage />} />\n          <Route path=\"/patient/:id\" element={<PatientDetail />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}